apiVersion: v1
kind: ConfigMap
metadata:
  name: modular-chatbot-config
  namespace: modular-chatbot
  labels:
    app: modular-chatbot
data:
  # Backend Configuration
  ENVIRONMENT: "production"
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  CORS_ORIGINS: "https://chatbot.example.com"
  
  # Redis Configuration
  REDIS_URL: "redis://redis-service:6379/0"
  
  # Frontend Configuration
  REACT_APP_API_URL: "/api"
  REACT_APP_ENVIRONMENT: "production"
  
  # Rate Limiting
  RATE_LIMIT_PER_MINUTE: "60"
  RATE_LIMIT_BURST: "10"
  # Agent Configuration
  MATH_AGENT_TIMEOUT: "30"
  KNOWLEDGE_AGENT_TIMEOUT: "45"
  ROUTER_AGENT_TIMEOUT: "10"
  
  # InfinitePay Knowledge Base
  INFINITEPAY_HELP_URL: "https://ajuda.infinitepay.io/pt-BR/"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: modular-chatbot
  labels:
    app: modular-chatbot
    component: redis
data:
  redis.conf: |
    # Redis configuration for modular chatbot
    bind 0.0.0.0
    port 6379
    timeout 0
    tcp-keepalive 300
    
    # Memory management
    maxmemory 256mb
    maxmemory-policy allkeys-lru
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    
    # Logging
    loglevel notice
    logfile ""
    
    # Security
    protected-mode no
    
    # Performance
    tcp-backlog 511
    databases 16
    
    # Append only file
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    
    # Slow log
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    
    # Client output buffer limits
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: modular-chatbot
  labels:
    app: modular-chatbot
    component: frontend
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Handle React Router
        location / {
            try_files $uri $uri/ /index.html;
        }

        # API proxy to backend
        location /api/ {
            proxy_pass http://backend-service:8000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Static assets caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }